"""adding cluster control options on every level

Revision ID: a987c6ce888d
Revises: 00c5cc87408d
Create Date: 2018-08-01 18:34:00.415937

"""

# revision identifiers, used by Alembic.
revision = 'a987c6ce888d'
down_revision = '8079a1cb5874'
branch_labels = None
depends_on = None

from datetime import datetime
from alembic import op
import sqlalchemy as sa


def upgrade():
    print(datetime.now().isoformat()
          + ' - adding cluster control options on feed model')
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('category', 'cluster_on_title')
    op.add_column('feed', sa.Column('cluster_enabled', sa.Boolean(),
                                    default=True, nullable=True))
    op.add_column('feed', sa.Column('cluster_tfidf_enabled', sa.Boolean(),
                                    default=True, nullable=True))
    op.add_column('feed', sa.Column('cluster_same_category', sa.Boolean(),
                                    default=True, nullable=True))
    op.add_column('feed', sa.Column('cluster_same_feed', sa.Boolean(),
                                    default=True, nullable=True))
    op.add_column('feed', sa.Column('cluster_wake_up', sa.Boolean(),
                                    default=True, nullable=True))
    op.add_column('feed', sa.Column('cluster_conf', sa.PickleType(),
                                    default=True, nullable=True))
    print(datetime.now().isoformat()
          + ' - adding cluster control options on category model')
    op.add_column('category', sa.Column('cluster_enabled', sa.Boolean(),
                                        default=True, nullable=True))
    op.add_column('category', sa.Column('cluster_tfidf_enabled', sa.Boolean(),
                                        default=True, nullable=True))
    op.add_column('category', sa.Column('cluster_same_category', sa.Boolean(),
                                        default=True, nullable=True))
    op.add_column('category', sa.Column('cluster_same_feed', sa.Boolean(),
                                        default=True, nullable=True))
    op.add_column('category', sa.Column('cluster_conf', sa.PickleType(),
                                        default=True, nullable=True))
    print(datetime.now().isoformat()
          + ' - adding cluster control options on user model')
    op.add_column('user', sa.Column('cluster_enabled', sa.Boolean(),
                                    default=True, nullable=False))
    op.add_column('user', sa.Column('cluster_tfidf_enabled', sa.Boolean(),
                                    default=True, nullable=False))
    op.add_column('user', sa.Column('cluster_same_category', sa.Boolean(),
                                    default=True, nullable=False))
    op.add_column('user', sa.Column('cluster_same_feed', sa.Boolean(),
                                    default=True, nullable=False))
    op.add_column('user', sa.Column('cluster_conf', sa.PickleType(),
                                    default=True, defaultnullable=False))


def downgrade():
    op.drop_column('feed', 'cluster_conf')
    op.drop_column('feed', 'cluster_same_feed')
    op.drop_column('feed', 'cluster_same_category')
    op.drop_column('feed', 'cluster_tfidf_enabled')
    op.drop_column('feed', 'cluster_enabled')
    op.drop_column('feed', 'cluster_wake_up')
    op.drop_column('category', 'cluster_conf')
    op.drop_column('category', 'cluster_same_feed')
    op.drop_column('category', 'cluster_same_category')
    op.drop_column('category', 'cluster_tfidf_enabled')
    op.drop_column('category', 'cluster_enabled')
    op.drop_column('user', 'cluster_conf')
    op.drop_column('user', 'cluster_same_feed')
    op.drop_column('user', 'cluster_same_category')
    op.drop_column('user', 'cluster_tfidf_enabled')
    op.drop_column('user', 'cluster_enabled')
    op.add_column('category', sa.Column('cluster_on_title', sa.BOOLEAN(), autoincrement=False, nullable=True))
